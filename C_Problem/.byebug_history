exit
v l
s
exit
v l
s
v l
s
v l
s
v l
s
v l
s
exit
v l
s
b[i+1]
b[i]
v l
s
v l
s
b[i+1]
b[i]
v l
s
v l
s
v l
s
<<<<<<< HEAD
h[i+1]
h[i]
s
v l
i
v l
s
v l
s
h[i+1]
h[i]
=======
>>>>>>> master
v l
s
v l
s
<<<<<<< HEAD
exit
h[num].to_i
current
v l
s
h[num].to_i
current
v l
s
v l
s
h[num].to_i
current
s
v l
s
h[num].to_i
current
s
v l
s
v l
s
v l
s
h[num].to_i
v l
s
h[num].to_i
h
v l
=======
v l
s
v l
s
ss
aa
a
ans.product(a)
>>>>>>> master
s
v l
s
exit
v l
s
v l
s
v l
s
v l
s
x
v l
s
v l
s
exit
s
v l
s
exit
x.length
(x[x.length/2-1]+x[x.length/2])/2 
exit
5/2
x[x.length/2]
x[x.length/2-1]
exit
s
v l
s
v l
s
i*i
v l
s
v l
s
v l
s
exit
v l
s
v l
s
v l
s
v l
s
v l
s
v l
s
v l
s
v l
dp
v l
s
v l
s
v l
s
v l
s
exit
v l
exit
v l
s
v l
s
b
a
a,b
sa,b
tmp.uniq.dup
v l
s
exit
v l
s
v l
s
v l
s
exit
(a & b)
v l
s
v l
s
v l
s
exit
v l
s
exit
v l
s
max_y+1
v l
s
exit
v l
s
exit
Math.sqrt(5)**2.ceil
Math.sqrt(5)**2.floor
Math.sqrt(5)**2.round
Math.sqrt(5).round
Math.sqrt(5)**2.to_i
Math.sqrt(5)**2
Math.sqrt(5)
(x1-a)**2 + (y1-b)**2
(x1-a).abs)**2 + ((y1-b).abs)**2
v l
s
v l
v ;
s
v l
s
Math.sqrt(5)**2
((x1-a).abs)**2 + ((y1-b).abs)**2 
v l
s
v l
s
exit
v l
s
v l
s
v l
s
v l
s
v l
s
v l
s
v l
v lk
v l
s
v l
s
exit
v l
s
exit
v l
s
v l
s
v l
s
v l
s
v l
exit
v l
s
