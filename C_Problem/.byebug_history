s
v l
s
v l
v lk
v l
s
v l
s
exit
s
v l
s
v l
s
v l
s[-6]
-w.size - 1
s[0..-w.size - 1]
s[-w.size, w.size]
s
v l
s
exit
v l
s
v l
s
exit
v l
s
v l
s
v l
s
v l
s
exit
v l
s
v l
s
exit
v l
s
v l
s
v l
s
exit
v l
s
exit
v l
s
v l
s
v l
s
exit
v l
s
exit
s
exit
s
exit
v l
s
10**2
v l
9*(10**i)
s
N-(10 ** i)+1
9*(10**i)
v l
s
v l
s
v l
s
v l
9 * 10 ** (i - 1) * (n - ('9' * i).to_i)
s
v l
s
exit
v l
s
exit
kasakexit
v l
s
v l
 vl
s
v l
s
v l
s
v l
s
v l
s
<<<<<<< HEAD
sum + d[i+1]
(sum + d[i+1])/2.0
sum
v l
s
(sum + d[i+1])/2.0
s
a
v l
s
v l
s
sum + d[i+1]
(sum + d[i+1])/2.0
s
v l
s
exit
v l
s
v l
s
i+1
index[d[i] -1] = i+1
v l
index[d[i] -1]
s
=======
v l
s
>>>>>>> master
v l
s
exit
2 3
2 2
2 1
1 4
1 3
1 2
1 1
s
index.class
[].class
k-1
index
index&.[](k - 1)
hash[x]
v l
s
v l
s
v l
n
s
v l
s
k
index&.[](k - 1)
index.class
v l
hash[x]
v l
s
index.class
index&.[]
index&.[](
index&.
index
index&.[](k - 1)
v l
s
v l
s
v l
index
index&.[](k - 1)
k
index&.[](k - 1)
v l
s
hash[x]
index&.[](k - 1)
s
v l
s
index&.[](k - 1)
v l
s
index.class
index&.[](k - 1)
s
hash[x]
v l
s
ss
s
ss
s
ss
s
ss
s
v l
s
d
v l
s
v l
s
v l
s
v l
s
1 2
s
v l
s
2 3
s
1 3
s
exit
s
v l
s
v l
s
exit
4 1
2 3
2 2
2 1
1 4
1 3
1 2
1 1
exit
exirt
arr.select{|k, v| k == num}
v l
s
arr.select{|k, v| k == num}
s
v l
s
v l
s
v l
s
v l
