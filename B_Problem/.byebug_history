exit
<<<<<<< HEAD
s[30, 3]
s[31, 3]
s[32, 3]
s[4, 3]
=======
s
v l
s
>>>>>>> master
v l
s
v l
s
<<<<<<< HEAD
s[n, 3]
s[n, 3].join
v l
s
v l
s
s[n, 3]
=======
v l
s
exit
v l
s
 new_array.select{|n| n % 2 != 0}.count
>>>>>>> master
v l
s
v l
s
exit
v l
s
v l
s
exit
v l
s
b /= 10
a /= 10
9876543210%10
123456789%10
a % 10 + b % 10
s
v l
s
format("%0#{a.length}", a)
format("%0#{a.length}", a.to_i)
a.to_i
v l
s
ss
s
exit
a = format("%0#{a.lencth}", a)
exit
v l
s
v l
s
a
v l
s
v l
s
exit
80 < 50
80 , 50
v l
s
v l
s
v l
s
v l
s
exit
s
v l
s
v l
s
abracadabra
s
v l
s
copy.join
v l
s
v l
s
v l
s
v l
s
b[9]
v l
s
v l
s
v l
vl
s
v l
s
v l
s
b[11]
s
v l
s
v l
s
2
s
exit
7 11 10 1 7 20 14 2 17 3 2 5 19 20 8 14 18 2 10 10
s
7 11 10 1 7 20 14 2 17 3 2 5 19 20 8 14 18 2 10 10
s
7 11 10 1 7 20 14 2 17 3 2 5 19 20 8 14 18 2 10 10
20 12
s
exit
array[11]
hash[array[11]]
hash[array[x-1]]
hash[array[12]]
hash[12]
hash[x]
hash["x"]
v l
s
exit
hash[:x]
hash[:x].values
hash[:x].value
v l
s
a
s
arrays[i + 1][j + 1]
 arrays[i][j] 
v l;
s
v l
s
v l
s
arrays[i][j]
v l
i
arrays[i][j + 1]
arrays[i + 1][j]
v l
arrays[i + 1][j]
arrays[i][j]
v l
arrays[i][j]
v l
s
arrays[i + 1][j]
arrays[i + 1][j + 1]
arrays[i][j]
s
v l
s
v l
s
exit
v l
s
cnt[a.hash] + 1
a.hash
v l
s
exit
v l
s
v l
s
v l
s
v l
s
v l
s
v l
s
v l
s
v l
s
v l
s
cnt[a.hash] += 1
a.hash
v l
s
v l
s
v l
s
exit
array
s
exit
eexit
v l
s
4
exit
s
num
v l
s
num[1]
num[0]
s
exit
s
a
s
up
h
s
v l
s
v l
s
v l
s
a.include?(sum)
v l
s
a.include?(sum)
v l
s
3
exit
s
v l
s
v l
s
