exit
v l
s
v l
s
v l
s
v l
s
exit
customers
v l
s
v l
s
a_customers.sort[n / 2]
v l
s
v l
s
v l
s
v l
s
arrays[i][j] + arrays[i + 1][j + 1] <= arrays[i + 1][j] + arrays[i][j + 1]
v l
s
v l
s
exit
(1 .. A * B).filter { |x| A % x == 0 and B % x == 0 }
(1 .. A * B)
v l
s
exit
h.to_a.max_by(&:last).last
h.to_a.max_by(&:last).second
h.to_a.max_by(&:last)
h.to_a.max_by(&:last).first
 h.to_a.max_by.first
h.to_a.max_by(:last)
h.to_a.max {|e1, e2| e1 <=> e2}
h.to_a.max_by
h.to_a
v l
s
exit
Prime.prime_division(105)
Prime.prime_division(105).map{|p, e| e + 1}
s
n
exit
Prime.prime_division(n)
v l
n
s
Prime.prime_division(n)
Prime.prime_division(n).map{|p, e| e + 1}
v l
s
Prime.prime_division(n).map{|p, e| e + 1}
v l
n
Prime.prime_division(n).map{|p, e| e + 1}.inject(:*)
Prime.prime_division(n).map{|p, e| e + 1}
Prime.prime_division(n).map{|p, e| e + 1}.
Prime.prime_division(n)
v l
n
v l
s
ss
s
so
s
o
s
exit
v l
s
v l
s
exit
s[head..tail].count('^atgc')
s[head..tail].count("^atgc")
s[head..tail].count("^atgc").zero? 
s[head..tail].count("atgc")
v l
s[head..tail]
s
s[head..tail]
s
s[head..tail]
.count
v 
s
v l
s
s[head..tail].count("^atgc")
s[head..tail]
v l
s[head..tail].count("atgc")
s[head..tail].count("^atgc")
v l
s
s[head..tail]
s[head..tail].count
s[head..tail].count("^atgc")
s[head..tail]
v l
s
v l
s
max
s
s[head..tail]
v l
s
v l
s[head..tail].count("^atgc")
s[head..tail].count("^atgc").zero? 
s
s[head..tail]
s
v l
s
exit
<<<<<<< HEAD
s[30, 3]
s[31, 3]
s[32, 3]
s[4, 3]
=======
s
v l
s
>>>>>>> master
v l
s
v l
s
<<<<<<< HEAD
s[n, 3]
s[n, 3].join
v l
s
v l
s
s[n, 3]
=======
v l
s
exit
v l
s
 new_array.select{|n| n % 2 != 0}.count
>>>>>>> master
v l
s
v l
s
exit
v l
s
v l
s
exit
v l
s
b /= 10
a /= 10
9876543210%10
123456789%10
a % 10 + b % 10
s
v l
s
format("%0#{a.length}", a)
format("%0#{a.length}", a.to_i)
a.to_i
v l
s
ss
s
exit
a = format("%0#{a.lencth}", a)
exit
v l
s
v l
s
a
v l
s
v l
s
exit
80 < 50
80 , 50
v l
s
v l
s
v l
s
v l
s
exit
s
v l
s
v l
s
abracadabra
s
v l
s
copy.join
v l
s
v l
s
v l
s
v l
s
b[9]
v l
s
v l
s
v l
vl
s
v l
s
v l
s
b[11]
s
v l
s
v l
s
2
s
exit
7 11 10 1 7 20 14 2 17 3 2 5 19 20 8 14 18 2 10 10
s
7 11 10 1 7 20 14 2 17 3 2 5 19 20 8 14 18 2 10 10
s
7 11 10 1 7 20 14 2 17 3 2 5 19 20 8 14 18 2 10 10
20 12
s
exit
array[11]
