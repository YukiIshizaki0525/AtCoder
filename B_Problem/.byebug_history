exit
<<<<<<< HEAD
11**2
Integer.sqrt(124)
Integer.sqrt(123)
Integer.sqrt(122)
Integer.sqrt(n)
v l
s
exit
v l
s
v l
s
v l
s
card.transpose
card.any?(&:all?)
card.any?
s
v l
exit
v l
s
v l
s
v l
s
v l
exit
s
exit
(H * W).divmod(2)
s
exit
s
v l
=======
s
s[i..i+2]
==
s
>>>>>>> master
exit
a.sort
v l
s
copy
v l
s
v l
s
v l
s
exit
v l
s
v l
s
v l
copy.shift
copy << copy.shift
v l
s
v l
s
v l
copy.shift
s
a
v l
s
exit
puts(sorted[0]) #=> 最小
sorted = a.sort
end
  copy.join
  copy << copy.shift #=> 最初の要素(copy[0])を最後に移動
a = s.length.times.map do
s = gets.chomp.split(//)
byebug
require 'byebug'
exit
(x * 1.08)
v l
s
v l
s
exit
1001
exit
(n * 100/108.to_f).round
100/108
(100/108).to_f
(n * (100/108).to_f).round
(n * (100 / 108).to_f).round
100/108.to_f
100/108
(n * 100 / 108).to_f
((n * 100 / 108).to_f).round
(n * 100 / 108).to_f.round
926.8.round
v l
s
exit
s
ss
s
exit
(999.0 * 1.08).round
999.0 * 1.08.round
999.0 * 1.08
no_tax.to_f
no_tax
s
exit
(1079*100/108).to_f
1079*100
n * 100 / 108
v l
s
exit
kaigai < b
str == "b"
s
str != "c"
str != "c
str
a+b
v l
s
ss
s
exit
s
v l
s
v l
s
exit
v l
s
v l
s
v l
s
exit
v l
s
v l
s
v l
index
s
v l
s
v l
s
v l
s
v l
s
v l
s
exit
v l
s
v l
s
v l
s
v l
s
exit
customers
v l
s
v l
s
a_customers.sort[n / 2]
v l
s
v l
s
v l
s
v l
s
arrays[i][j] + arrays[i + 1][j + 1] <= arrays[i + 1][j] + arrays[i][j + 1]
v l
s
v l
s
exit
(1 .. A * B).filter { |x| A % x == 0 and B % x == 0 }
(1 .. A * B)
v l
s
exit
h.to_a.max_by(&:last).last
h.to_a.max_by(&:last).second
h.to_a.max_by(&:last)
h.to_a.max_by(&:last).first
 h.to_a.max_by.first
h.to_a.max_by(:last)
h.to_a.max {|e1, e2| e1 <=> e2}
h.to_a.max_by
h.to_a
v l
s
exit
Prime.prime_division(105)
Prime.prime_division(105).map{|p, e| e + 1}
s
n
exit
Prime.prime_division(n)
v l
n
s
Prime.prime_division(n)
Prime.prime_division(n).map{|p, e| e + 1}
v l
s
Prime.prime_division(n).map{|p, e| e + 1}
v l
n
Prime.prime_division(n).map{|p, e| e + 1}.inject(:*)
Prime.prime_division(n).map{|p, e| e + 1}
Prime.prime_division(n).map{|p, e| e + 1}.
Prime.prime_division(n)
v l
n
v l
s
ss
s
so
s
o
s
exit
v l
s
v l
s
exit
s[head..tail].count('^atgc')
s[head..tail].count("^atgc")
s[head..tail].count("^atgc").zero? 
s[head..tail].count("atgc")
v l
s[head..tail]
s
s[head..tail]
s
s[head..tail]
.count
v 
s
v l
s
s[head..tail].count("^atgc")
<<<<<<< HEAD
=======
s[head..tail]
v l
s[head..tail].count("atgc")
s[head..tail].count("^atgc")
v l
s
s[head..tail]
s[head..tail].count
s[head..tail].count("^atgc")
s[head..tail]
v l
s
v l
s
max
s
s[head..tail]
v l
s
v l
s[head..tail].count("^atgc")
s[head..tail].count("^atgc").zero? 
s
s[head..tail]
s
v l
s
exit
<<<<<<< HEAD
s[30, 3]
s[31, 3]
>>>>>>> master
